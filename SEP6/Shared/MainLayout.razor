@using SEP6.Authentication;
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@using System.Security.Claims
@using Blazored.Toast.Configuration

<PageTitle>Movies4U</PageTitle>

<div class="page">
    
    <div class="sidebar">
        <NavMenu />
        <AuthorizeView>
            <Authorized>
                <button id="LogoutButton" class="btn btn-primary" @onclick="PerformLogout">Logout</button>
            </Authorized>
        </AuthorizeView>
    </div>
    <main>
        <AuthorizeView>
            <Authorized>
        <div class="top-row">
           <SearchComponent.SearchBar searchedMovie="@searchedMovie"></SearchComponent.SearchBar>
        </div>
        </Authorized>
    </AuthorizeView>
        <div class="content">
            @Body
        </div>
    </main>
</div>

@code {
    [CascadingParameter (Name="searchedMovie")]
    public string searchedMovie { get; set; }
    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }



    protected override async Task OnInitializedAsync()
    {
        if (authenticationState is not null)
        {
            var authState = await authenticationState;
            var user = authState?.User;

            if (user?.Identity is not null && user.Identity.IsAuthenticated)
            {
                NavigationManager.NavigateTo("/index");
            }
            else
                NavigationManager.NavigateTo("/landingpage");
        }
    }
 
    private async Task PerformLogout()
    {
        ((CustomAuthenticationStateProvider)AuthenticationStateProvider).Logout();
        NavigationManager.NavigateTo("/");
    }
}

