@using SEP6.Authentication;
@inherits LayoutComponentBase
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavgMan

<PageTitle>Movies4U</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
        <AuthorizeView>
            <Authorized>
                <button id="LogoutButton" class="btn btn-primary" @onclick="PerformLogout">Logout</button>
            </Authorized>
        </AuthorizeView>
    </div>
    <main>
        <div class="top-row">
           <SearchComponent.SearchBar></SearchComponent.SearchBar>
        </div>
        <div class="content">
            @Body
        </div>
    </main>
</div>
@code {

    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (authenticationState is not null)
        {
            var authState = await authenticationState;
            var user = authState?.User;

            if (user?.Identity is not null && user.Identity.IsAuthenticated)
            {
                NavgMan.NavigateTo("/index");
            }
            else
                NavgMan.NavigateTo("/login");
        }
    }
 
    private async Task PerformLogout()
    {
        ((CustomAuthenticationStateProvider)AuthenticationStateProvider).Logout();
        NavgMan.NavigateTo("/");
    }
}

