@page "/searchresults"
@using Newtonsoft.Json;
@using SEP6.Data;
@using SEP6.Models;
@using SEP6.Pages.Components
@inject IMovieService movieService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime


<h3>Search results</h3>

@if (moviesList != null)
{
    @foreach (var movie in moviesList)
    {
        <div class="container">
            <div class="row">
                <div id="posters" class="col-md-4">
                    <table class="table">
                        <div>
                            <tr>
                                <th style="margin-right: 0;" class="card-text">@movie.Id</th>
                                <th> - </th>
                                <th class="card-text">@movie.title</th>
                            <th style="margin-right: 0;" class="card-text">@movie.year</th>
                            </tr>
                        </div>
                    </table>
                </div>
            </div>
        </div>
    }

}
@code {

    [Parameter]
    public string searchedMovie { get; set; }
    public List<Movies> movies { get; set; }
    [Parameter]
    public List<Movies> moviesList { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        Console.WriteLine("going through OnParamSet");
        var uri = new Uri(NavigationManager.Uri);
        var moviesJson = System.Web.HttpUtility.ParseQueryString(uri.Query).Get("movies");
        moviesList = JsonConvert.DeserializeObject<List<Movies>>(moviesJson);
        await base.OnParametersSetAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            NavigationManager.LocationChanged += HandleLocationChanged;
            HandleLocationChanged(null, new LocationChangedEventArgs(NavigationManager.Uri, false));
        }
    }

    private void HandleLocationChanged(object sender, LocationChangedEventArgs args)
    {
        var uri = new Uri(NavigationManager.Uri);
        var moviesJson = System.Web.HttpUtility.ParseQueryString(uri.Query).Get("movies");
        moviesList = JsonConvert.DeserializeObject<List<Movies>>(moviesJson);
        StateHasChanged();
    }

    public async ValueTask DisposeAsync()
    {
        NavigationManager.LocationChanged -= HandleLocationChanged;
    }

    //protected override async Task OnInitializedAsync()
    //{
    //    Console.WriteLine("Initializing Search Result");
    //    var uri = new Uri(uriHelper.Uri);
    //    var moviesJson = System.Web.HttpUtility.ParseQueryString(uri.Query).Get("movies");
    //    moviesList = JsonConvert.DeserializeObject<List<Movies>>(moviesJson);

    //}   
    //protected override async Task OnParametersSetAsync()
    //{
    //    Console.WriteLine("Initializing Search Result");
    //    var uri = new Uri(uriHelper.Uri);
    //    var moviesJson = System.Web.HttpUtility.ParseQueryString(uri.Query).Get("movies");
    //    moviesList = JsonConvert.DeserializeObject<List<Movies>>(moviesJson);
    //    await base.OnParametersSetAsync();
    //}
    
}
