@page "/index"
@using Newtonsoft.Json;
@using SEP6.Data;
@using SEP6.Models;
@using System.Globalization;
@inject HttpClient httpClient
@inject IMovieService movieService
@inject IUserService userService
@inject IJSRuntime JSRuntime

<h3 id="MoviesTitleIndex">Movies</h3>

@if (moviesList != null && moviesList.Search != null)
{
    <div class="container">
        <div class="row">
            @foreach (var movie in moviesList.Search)
            {
                <div class="col-md-4">
                    <div class="poster-container">
                        <img src="@movie.Poster" class="poster-image" />
                        <div class="movie-info">
                            <div class="movie-title">@movie.Title</div>
                            <div class="movie-details">
                                <span class="movie-type">@textInfo.ToTitleCase(movie.Type)</span> - <span class="movie-year">@movie.Year</span>
                                <button id="AddToFavoriteButton" @onclick="() => AddToFavorites(movie.ImdbID)" class="fa fa-heart"> Add</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}
@code {

    public OMDBResult moviesList { get; set; }
    public OMDBResult movieTitles { get; set; }
    public MoviesOMDB moviesOMDB { get; set; }
    TextInfo textInfo = new CultureInfo("en-US", false).TextInfo;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            //string title = "shawshank";
            //movieTitles = await movieService.IndexMovie(title);

            string title = "The Room";
            moviesList = await movieService.GetMoviesFromOMDb(title);
            // Use the movie data as needed
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

        public async Task AddToFavorites(string movieId)
    {
        int intMovieId = int.Parse(movieId);
        var serializedUser = await JSRuntime.InvokeAsync<string>("sessionStorage.getItem", "currentUser");
     

        var user = JsonConvert.DeserializeObject<User>(serializedUser);
        var username = user.Name;

        if (!string.IsNullOrEmpty(username))
        {
            Console.WriteLine("Adding to favorites");
            await userService.PostFavoriteMovies(username, intMovieId);
        }

        
    }
}